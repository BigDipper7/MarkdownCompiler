Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> body
Rule 1     body -> statement
Rule 2     statement -> expression
Rule 3     expression -> expression CR
Rule 4     expression -> expression CR setence
Rule 5     expression -> setence
Rule 6     setence -> factor
Rule 7     setence -> phrase
Rule 8     phrase -> H1 factor
Rule 9     phrase -> H2 factor
Rule 10    phrase -> H3 factor
Rule 11    phrase -> STRONG
Rule 12    factor -> TEXT

Terminals, with rules where they appear

CR                   : 3 4
H1                   : 8
H2                   : 9
H3                   : 10
STRONG               : 11
TEXT                 : 12
error                : 

Nonterminals, with rules where they appear

body                 : 0
expression           : 2 3 4
factor               : 6 8 9 10
phrase               : 7
setence              : 4 5
statement            : 1

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . statement
    (2) statement -> . expression
    (3) expression -> . expression CR
    (4) expression -> . expression CR setence
    (5) expression -> . setence
    (6) setence -> . factor
    (7) setence -> . phrase
    (12) factor -> . TEXT
    (8) phrase -> . H1 factor
    (9) phrase -> . H2 factor
    (10) phrase -> . H3 factor
    (11) phrase -> . STRONG

    TEXT            shift and go to state 4
    H1              shift and go to state 5
    H2              shift and go to state 3
    H3              shift and go to state 7
    STRONG          shift and go to state 10

    body                           shift and go to state 1
    setence                        shift and go to state 2
    statement                      shift and go to state 8
    factor                         shift and go to state 9
    phrase                         shift and go to state 6
    expression                     shift and go to state 11

state 1

    (0) S' -> body .



state 2

    (5) expression -> setence .

    CR              reduce using rule 5 (expression -> setence .)
    $end            reduce using rule 5 (expression -> setence .)


state 3

    (9) phrase -> H2 . factor
    (12) factor -> . TEXT

    TEXT            shift and go to state 4

    factor                         shift and go to state 12

state 4

    (12) factor -> TEXT .

    CR              reduce using rule 12 (factor -> TEXT .)
    $end            reduce using rule 12 (factor -> TEXT .)


state 5

    (8) phrase -> H1 . factor
    (12) factor -> . TEXT

    TEXT            shift and go to state 4

    factor                         shift and go to state 13

state 6

    (7) setence -> phrase .

    CR              reduce using rule 7 (setence -> phrase .)
    $end            reduce using rule 7 (setence -> phrase .)


state 7

    (10) phrase -> H3 . factor
    (12) factor -> . TEXT

    TEXT            shift and go to state 4

    factor                         shift and go to state 14

state 8

    (1) body -> statement .

    $end            reduce using rule 1 (body -> statement .)


state 9

    (6) setence -> factor .

    CR              reduce using rule 6 (setence -> factor .)
    $end            reduce using rule 6 (setence -> factor .)


state 10

    (11) phrase -> STRONG .

    CR              reduce using rule 11 (phrase -> STRONG .)
    $end            reduce using rule 11 (phrase -> STRONG .)


state 11

    (2) statement -> expression .
    (3) expression -> expression . CR
    (4) expression -> expression . CR setence

    $end            reduce using rule 2 (statement -> expression .)
    CR              shift and go to state 15


state 12

    (9) phrase -> H2 factor .

    CR              reduce using rule 9 (phrase -> H2 factor .)
    $end            reduce using rule 9 (phrase -> H2 factor .)


state 13

    (8) phrase -> H1 factor .

    CR              reduce using rule 8 (phrase -> H1 factor .)
    $end            reduce using rule 8 (phrase -> H1 factor .)


state 14

    (10) phrase -> H3 factor .

    CR              reduce using rule 10 (phrase -> H3 factor .)
    $end            reduce using rule 10 (phrase -> H3 factor .)


state 15

    (3) expression -> expression CR .
    (4) expression -> expression CR . setence
    (6) setence -> . factor
    (7) setence -> . phrase
    (12) factor -> . TEXT
    (8) phrase -> . H1 factor
    (9) phrase -> . H2 factor
    (10) phrase -> . H3 factor
    (11) phrase -> . STRONG

    CR              reduce using rule 3 (expression -> expression CR .)
    $end            reduce using rule 3 (expression -> expression CR .)
    TEXT            shift and go to state 4
    H1              shift and go to state 5
    H2              shift and go to state 3
    H3              shift and go to state 7
    STRONG          shift and go to state 10

    phrase                         shift and go to state 6
    setence                        shift and go to state 16
    factor                         shift and go to state 9

state 16

    (4) expression -> expression CR setence .

    CR              reduce using rule 4 (expression -> expression CR setence .)
    $end            reduce using rule 4 (expression -> expression CR setence .)

